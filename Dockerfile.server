# Build stage
FROM golang:1.22-alpine AS builder

WORKDIR /build

# Copy go mod files
COPY go.mod go.sum* ./

# Download dependencies (if go.sum exists)
RUN go mod download || true

# Copy source code
COPY . .

# Build the server binary
# CGO_ENABLED=0 for static binary (works with scratch)
# -ldflags="-w -s" to strip debug info and reduce size
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-w -s" \
    -o /build/server \
    ./cmd/server

# Final stage: minimal image
FROM scratch

# Copy CA certificates for HTTPS (if needed in future)
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy the binary from builder
COPY --from=builder /build/server /server

# Expose default port
EXPOSE 8080

# Set default environment variables
ENV WOW_ADDR=":8080" \
    WOW_BITS="22" \
    WOW_EXPIRES="60"

# Run the server
ENTRYPOINT ["/server"]

